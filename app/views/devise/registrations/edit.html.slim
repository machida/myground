.page-body
  .container
    = render 'devise/shared/auth_page_header'
    .auth-form
      .auth-form__header
        = t('title.edit_user')
      .auth-form__body
        = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
          = render 'devise/shared/error_messages', resource: resource
          .field
            label.label
              = f.label :email
            .control
              = f.email_field :email, autofocus: true, autocomplete: 'email', class: 'input'
            - if devise_mapping.confirmable? && resource.pending_reconfirmation?
              div
                | Currently waiting confirmation for:
                = resource.unconfirmed_email
          .field
            label.label
              = f.label :username
            .control
              = f.text_field :username, autocomplete: 'username', class: 'input'
          .field
            label.label
              | #{f.label :password}（#{t('information.leave_blank_if_not_change')}）
            .control
              = f.password_field :password, autocomplete: 'new-password', class: 'input'
            - if @minimum_password_length
              p.help
                = @minimum_password_length
                = t('information.minimum_character')
          .field
            label.label
              = f.label :password_confirmation
            .control
              = f.password_field :password_confirmation, autocomplete: 'new-password', class: 'input'
          .field
            label.label
              = f.label :current_password
            .control
              = f.password_field :current_password, autocomplete: 'current-password', class: 'input'
          .actions
            = f.submit t('button.update'), class: 'button is-primary'
    .auth-links
      ul.auth-links__items
        = render 'devise/shared/links'
        li.auth-links__item
          = link_to t('button.back'), root_path

    = button_to t('button.cancel_account'), registration_path(resource_name), data: { confirm: t('confirm.destroy') }, method: :delete, class: 'button is-danger'
